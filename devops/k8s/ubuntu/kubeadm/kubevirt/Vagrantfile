# -*- mode: ruby -*-
# vi: set ft=ruby :

# 네트워크 설정 변수 - 사용자 정의 가능
NETWORK_CONFIG = {
  :pod_cidr => "192.168.0.0/16",      # Pod 네트워크 CIDR (Calico 기본값)
  :master_ip => "172.168.11.10",      # 마스터 노드 IP
  :network_prefix => "172.168.11"     # 네트워크 프리픽스
}

# 노드 설정
K8S_CLUSTER = {
  "k8s-master" => { :ip => "#{NETWORK_CONFIG[:master_ip]}", :cpus => 4, :memory => 3072, :ssh => 22000 },
  "k8s-worker1" => { :ip => "#{NETWORK_CONFIG[:network_prefix]}.21", :cpus => 2, :memory => 2048, :ssh => 22001 },
  "k8s-worker2" => { :ip => "#{NETWORK_CONFIG[:network_prefix]}.22", :cpus => 2, :memory => 2048, :ssh => 22002 }
}

# 환경 설정
CLUSTER_NAME = "k8s-cluster-kubeadm"
NODE_NUMBER = K8S_CLUSTER.size()
K8S_VERSION = "1.31"  # Kubernetes 버전

Vagrant.configure("2") do |config|
  K8S_CLUSTER.each do |hostname, info|
    config.vm.define hostname do |cfg|
      cfg.vm.box = "bento/ubuntu-22.04"
      cfg.vm.host_name = hostname
      
      # 네트워크 설정
      cfg.vm.network "private_network", ip: info[:ip]
      cfg.vm.network "forwarded_port", guest: 22, host: info[:ssh], auto_correct: true, id: "ssh"

      # VirtualBox 설정
      cfg.vm.provider "virtualbox" do |vb|
        vb.name = hostname
        vb.gui = false
        vb.memory = info[:memory]
        vb.cpus = info[:cpus]
        vb.customize ["modifyvm", :id, "--groups", "/#{CLUSTER_NAME}"]
      end
      
      # 환경 변수 설정
      cfg.vm.provision "shell", inline: <<-SHELL
        echo "export MASTER_IP=#{NETWORK_CONFIG[:master_ip]}" > /etc/profile.d/k8s-env.sh
        echo "export POD_CIDR=#{NETWORK_CONFIG[:pod_cidr]}" >> /etc/profile.d/k8s-env.sh
        echo "export NETWORK_PREFIX=#{NETWORK_CONFIG[:network_prefix]}" >> /etc/profile.d/k8s-env.sh
        echo "export K8S_VERSION=#{K8S_VERSION}" >> /etc/profile.d/k8s-env.sh
        chmod +x /etc/profile.d/k8s-env.sh
      SHELL
      
      # 공통 설정 스크립트 실행
      cfg.vm.provision "shell", path: "../provision/kubeadm-common.sh", privileged: false
      
      # 마스터 노드 설정 스크립트 실행
      if hostname == "k8s-master"
        cfg.vm.provision "shell", path: "../provision/kubeadm-master.sh", privileged: false
        cfg.vm.provision "shell", path: "../provision/kubevirt-setup.sh", privileged: false
      elsif hostname.include? "worker"
        cfg.vm.provision "shell", path: "../provision/kubeadm-worker.sh", privileged: false
      end
    end
  end
end