## 기본 규칙
- 코드를 직접 수정하기 전에 항상 계획을 먼저 제시하고 사용자 승인을 받을 것
- 변경사항이 클 경우 단계별로 나누어 진행할 것
- 코드 변경 시 주석으로 변경 이유를 설명할 것
- 요청 이외 다른 로직은 변경하지 말 것, 어쩔 수 없이 변경이 필요하다면 요청 이외의 로직임을 밝히고 사용자의 승인을 받을 것

## 작업 플로우
1. 요청 분석 및 이해
2. 구체적인 실행 계획 제시
3. 사용자 승인 대기
4. 승인 후 단계별 실행
5. 각 단계 완료 후 확인 요청
6. 적용 후 프로젝트 README.md 파일 업데이트

## 코딩 스타일
- 함수형 프로그래밍 스타일 선호
- 디버깅을 위한 로그 처리 선호

{
    "project": {
        "name": "vibe_components",
        "description": "NextJS와 FastAPI 기반의 공공데이터 RAG 웹 애플리케이션"
    },
    "components": {
        "crawler": {
            "type": "python",
            "path": "crawler",
            "main_file": "main.py",
            "dependencies": "requirements.txt",
            "description": "공공데이터 크롤링 컴포넌트"
        },
        "claude_rag": {
            "type": "python",
            "path": "claude_rag",
            "main_file": "server.py",
            "dependencies": "requirements.txt",
            "description": "RAG 기반 LLM 통신 컴포넌트"
        },
        "new_naraapi": {
            "type": "nextjs",
            "path": "new_naraapi",
            "main_file": "app/page.js",
            "dependencies": "package.json",
            "description": "NextJS 프론트엔드 컴포넌트"
        }
    },
    "integration": {
        "api_endpoints": {
            "crawler": "http://localhost:8000",
            "claude_rag": "http://localhost:8001",
            "nextjs": "http://localhost:3000"
        },
        "environment": {
            "python_version": "3.9+",
            "node_version": "18+"
        }
    },
    "development": {
        "recommended_extensions": [
            "ms-python.python",
            "ms-python.vscode-pylance",
            "dbaeumer.vscode-eslint",
            "esbenp.prettier-vscode"
        ],
        "formatting": {
            "python": {
                "formatter": "black",
                "line_length": 88
            },
            "javascript": {
                "formatter": "prettier",
                "singleQuote": true
            }
        }
    }
}